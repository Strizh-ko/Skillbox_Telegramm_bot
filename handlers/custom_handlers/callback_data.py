from states.st_find_hotel import FindHotelState
from loader import bot
from project import RapidAPI
from keyboards import inline


@bot.callback_query_handler(func=lambda callback: callback.data)
def hotel(callback):

    with bot.retrieve_data(callback.message.chat.id) as data:
        if callback.data in data['cities_dct'].values():
            for city, id in data['cities_dct'].items():
                if callback.data == id:
                    data['cities_dct'] = {city: id}
                    # data['city_name'] = city
                    # data['city_id'] = id
            print(data['cities_dct'])
            bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å–≤–æ–µ–≥–æ –ø—Ä–∏–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì")

        elif callback.data == '–í—Å–µ –≤–µ—Ä–Ω–æ':
            bot.send_message(callback.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ! –ò—â—É –æ—Ç–µ–ª–∏...")
            data['hotels_lst'] = RapidAPI.hotels(callback.message.chat.id)

            if data['hotels_lst'] != None:
                bot.send_message(callback.message.chat.id, f"–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–æ {len(data['hotels_lst'])} –æ—Ç–µ–ª–µ–π.\n\n"
                                                  f"–ö–∞–∫–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –≤–∞–º –≤–∞–∂–Ω—ã?", reply_markup=inline.mode.mode_buttons())
                bot.set_state(callback.message.from_user.id, FindHotelState.mode, callback.message.chat.id)
                print(data['hotels_lst'])
            else:
                bot.send_message(callback.message.chat.id, "–ñ–∞–ª—å...üòû –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\n"
                                                           "–î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑, –Ω–æ —Å –¥—Ä—É–≥–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–∏—Å–∫–∞.")

        elif callback.data == '–ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é':
            bot.send_message(callback.message.chat.id, f"–ö–∞–∫ —É–∑–Ω–∞–µ—Ç–µ, —Å–∫–∞–∂–∏—Ç–µ")
